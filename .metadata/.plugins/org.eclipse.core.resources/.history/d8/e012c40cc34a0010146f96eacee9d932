package com.Flipkart.utilities;


import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.HashMap;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class ReadData {

	public HashMap<String, String> getPropertyDevice4(String sheetName, String language) throws IOException  {
		// TODO Auto-generated method stub
		String path=System.getProperty("user.dir");
		String separator=System.getProperty("file.separator");
		String sheetPath=path+separator+"testData"+separator+"propertyFileDevice4.xlsx";
		FileInputStream fis = new FileInputStream(new File(sheetPath));
		Workbook wb;
		Sheet sh;
		try {
			wb=new XSSFWorkbook(fis);
			sh=wb.getSheet(sheetName);
		} catch (Exception e1) {
			sheetPath=path+separator+"testData"+separator+"propertyFileDevice4.xls";
			FileInputStream fisxl = new FileInputStream(sheetPath);
			wb=new HSSFWorkbook(fisxl);
			sh=wb.getSheet(sheetName);

		}
		int rowNum=sh.getPhysicalNumberOfRows();

//		int tcRow = 0;
		int colValue = 0;
		HashMap<String,String> map=new HashMap<String,String>();
/*
		if(language.equalsIgnoreCase("English")){
			colValue=1;
		}else if(language.equalsIgnoreCase("German")){
			colValue=2;
		}else if(language.equalsIgnoreCase("Chinese")){
			colValue=3;
		}else if(language.equalsIgnoreCase("Spanish")){
			colValue=4;
		}else if(language.equalsIgnoreCase("Danish")){
			colValue=5;
		}else if(language.equalsIgnoreCase("French")){
			colValue=6;
		}else if(language.equalsIgnoreCase("Italian")){
			colValue=7;
		}else if(language.equalsIgnoreCase("Swedish")){
			colValue=8;
		}
*/
		if(language.equalsIgnoreCase("English")){
			colValue=1;
		}else if(language.equalsIgnoreCase("Bulgarian")){
			colValue=2;
		}else if(language.equalsIgnoreCase("Czech")){
			colValue=3;
		}else if(language.equalsIgnoreCase("Danish")){
			colValue=4;
		}else if(language.equalsIgnoreCase("German")){
			colValue=5;
		}else if(language.equalsIgnoreCase("Greek")){
			colValue=6;
		}else if(language.equalsIgnoreCase("Spanish")){
			colValue=7;
		}else if(language.equalsIgnoreCase("Finnish")){
			colValue=8;
		}else if(language.equalsIgnoreCase("French")){
			colValue=9;
		}else if(language.equalsIgnoreCase("Norwegian")){
			colValue=10;
		}else if(language.equalsIgnoreCase("Hungarian")){
			colValue=11;
		}else if(language.equalsIgnoreCase("Italian")){
			colValue=12;
		}else if(language.equalsIgnoreCase("Japanese")){
			colValue=13;
		}else if(language.equalsIgnoreCase("Korean")){
			colValue=14;
		}else if(language.equalsIgnoreCase("Dutch")){
			colValue=15;
		}else if(language.equalsIgnoreCase("Polish")){
			colValue=16;
		}else if(language.equalsIgnoreCase("Portuguese")){
			colValue=17;
		}else if(language.equalsIgnoreCase("Romanian")){
			colValue=18;
		}else if(language.equalsIgnoreCase("Russian")){
			colValue=19;
		}else if(language.equalsIgnoreCase("Slovenian")){
			colValue=20;
		}else if(language.equalsIgnoreCase("Swedish")){
			colValue=21;
		}else if(language.equalsIgnoreCase("Turkish")){
			colValue=22;
		}else if(language.equalsIgnoreCase("Chinese")){
			colValue=23;
		}

		if(rowNum>1){

			for(int i=1;i<rowNum;i++){
				Row row=sh.getRow(i);

				Cell cel1=row.getCell(0);
				Cell cel2=row.getCell(colValue);
				String cellValue1=null;
				String cellValue2=null;
				try {

					if(cel1.getCellType()==CellType.STRING){
						cellValue1=cel1.getStringCellValue();
					}else if(cel1.getCellType()==CellType.NUMERIC){
						double val=cel1.getNumericCellValue();
						DecimalFormat df = new DecimalFormat("#");
						//double dd=;
						cellValue1=df.format(val);//Double.toString(val);
					}else if(cel1.getCellType()==CellType.BLANK){
						cellValue1=null;
					}
				} catch (Exception e) {
					//System.out.println("No data present at column "+j);
				}

				try {

					if(cel2.getCellType()==CellType.STRING){
						cellValue2=cel2.getStringCellValue();
					}else if(cel1.getCellType()==CellType.NUMERIC){
						double val=cel2.getNumericCellValue();
						DecimalFormat df = new DecimalFormat("#");
						//double dd=;
						cellValue2=df.format(val);//Double.toString(val);
					}else if(cel2.getCellType()==CellType.BLANK){
						cellValue2=null;
					}
				} catch (Exception e) {
					//System.out.println("No data present at column "+j);
				}

				if(cellValue1!=null){
					map.put(cellValue1, cellValue2);
				}
			}
		}
		wb.close();
		return map;
	}
	
}
